#!/usr/bin/python3
>>> def matrix_mul(m_a, m_b):
...     if not isinstance(m_a, list) or not isinstance(m_b, list):
...         raise TypeError("m_a must be a list or m_b must be a list")
...     if not all(isinstance(row, list) for row in m_a) or not all(isinstance(row, list) for row in m_b):
...         raise TypeError("m_a must be a list of lists or m_b must be a list of lists")
...     if len(m_a) == 0 or len(m_a[0]) == 0:
...         raise ValueError("m_a can't be empty")
...     if len(m_b) == 0 or len(m_b[0]) == 0:
...         raise ValueError("m_b can't be empty")
...     for row in m_a:
...         for element in row:
...             if not isinstance(element, (int, float)):
...                 raise TypeError("m_a should contain only integers or floats")
...     for row in m_b:
...         for element in row:
...             if not isinstance(element, (int, float)):
...                 raise TypeError("m_b should contain only integers or floats")
...     a_row_size = len(m_a[0])
...     b_row_size = len(m_b[0])
...     if any(len(row) != a_row_size for row in m_a):
...         raise TypeError("Each row of m_a must be of the same size")
...     if any(len(row) != b_row_size for row in m_b):
...         raise TypeError("each row of m_b must be of the same size")
...     if a_row_size != len(m_b):
...         raise ValueError("m_a and m_b can't be multiplied")
...     result = []
...     for i in range(len(m_a)):
...         row = []
...         for j in range(len(m_b[0])):
...             element = sum(m_a[i][k] * m_b[k][j] for k in range(len(m_b)))
...             row.append(element)
...         result.append(row)

...     return result
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
[[58, 64], [139, 154]]
>>> matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[7, 8, 9], [10, 11, 12]])
[[27, 30, 33], [61, 68, 75], [95, 106, 117]]
>>> matrix_mul([[0, 0], [0, 0]], [[1, 2], [3, 4]])
[[0, 0], [0, 0]]
>>> matrix_mul([], [[]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([[1, 2], [3, '4']], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[1, 2], [3, 4]], [[1, '2'], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

import doctest
>>> doctest.testmod()
